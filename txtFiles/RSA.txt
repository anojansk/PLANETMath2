In this section we will take a look at the RSA algorithm. 

The algorithm goes as following:

Bob picks two distinct primes p and q, and multiplies them together: 
			
					n = pq

Together with this he chooses an element exponent e, such that; 

gcd(e,(p-1)(q-1)) = 1.

From here Bob sends alice the pair (n,e). 

Alice now writes her message as m (in the case that the message is greater than n, she will break the message m into blocks, where each is less than n).

Alice now computes 
				c ≡ m^e (mod n)

And from here she sends c to Bob. 

Since Bob knows p and q he can calculate (p-1)(q-1) and send Alice a decryption exponent d with 

	de ≡ 1 (mod (p-1)(q-1))

This gives ut later:

	m ≡ c^d (mod n)

Hence bob can read the message. 


Here is an example:

let p = 17 and q = 31
n = 17*31 = 527

let e (the exponent component) be a number such that gcd(e, 16*30) = 1 --> gcd(e,480) = 1 --> e = 7 (many choices here)

Now the values of n and e are sent to Alice those are 527 and 7

Alice is sending a message for simplicity let us say: The number 46

Alice then comput c ≡ m^e (mod n) --> c ≡ 46^7 (mod 527) ≡ 364 (mod 527)

Bob now calculates 7d ≡ 1 mod(480)--> 

By the use of the extended euclidian algorithm (link her)

7a + 480b = 1

480 = 68 * 7 + 4
7 = 1 * 4 + 3
4 = 1 * 3 + 1
3 = 1 * 3 + 0

This means: 
1 = 4 + (-1) * 3
  = 4 + (-1)(7 - 1 * 4) = 2 * 4 + (-1) * 7
  = 2 * (480 - 68 * 7) + (-1) * 7 = 2 * 480 + (-137) * 7

Meaning the solution to the equations: 
7d ≡ 1 mod(480), is true for d = -137 (mod 480) = 343 (mod 480)

Now that we have found d = 343, 

Bob can compute c^d (mod n)
c = 364, d = 343, n = 527.

For this we need a bigger calculater (https://www.omnicalculator.com/math/power-modulo) and the answer is 46. This is the message we started with.

Lag en oppgave, med bare lf. w
